count = count + 1
}
print(count)
#presence_aov_df[i]$SUS = count
scores = c(scores, count)
print("------------------")
}
print(scores)
presence_df$SUS = scores
presence_df
#extract aov df
presence_aov_df = data.frame(presence_df$d.id, presence_df$d.bedingung, presence_df$SUS, stringsAsFactors = TRUE)
presence_aov_df = convert_as_factor(presence_aov_df, presence_df.d.id)
#order by bedingung
presence_aov_df = presence_aov_df %>%
arrange(presence_df.d.bedingung)
tibble(presence_aov_df)
#summary statistics
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
get_summary_stats(presence_df.SUS, type = "mean_sd") #to Latex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "presence_df.d.bedingung", y = "presence_df.SUS", add = "point")
presence_bxp #toLatex
#outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
identify_outliers(presence_df.SUS) #no outliers
#without 5?
presence_df = subset(presence_df, d.id!=5 & d.id!=6)
#calculate SUS-score
scores = c()
for(i in 1:nrow(presence_df)) {
row = presence_df[i,]
# do stuff with row
count = 0
#print(row$id)
# print(i)
# print(row$d.A)
# print(row$d.A > 5)
if (row$d.A > 5) {
count = count + 1
}
if (row$d.B > 5) {
count = count + 1
}
if (row$d.C > 5) {
count = count + 1
}
if (row$d.D > 5) {
count = count + 1
}
if (row$d.E > 5) {
count = count + 1
}
if (row$d.F > 5) {
count = count + 1
}
print(count)
#presence_aov_df[i]$SUS = count
scores = c(scores, count)
print("------------------")
}
print(scores)
presence_df$SUS = scores
presence_df
#extract aov df
presence_aov_df = data.frame(presence_df$d.id, presence_df$d.bedingung, presence_df$SUS, stringsAsFactors = TRUE)
presence_aov_df = convert_as_factor(presence_aov_df, presence_df.d.id)
#order by bedingung
presence_aov_df = presence_aov_df %>%
arrange(presence_df.d.bedingung)
tibble(presence_aov_df)
#summary statistics
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
get_summary_stats(presence_df.SUS, type = "mean_sd") #to Latex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "presence_df.d.bedingung", y = "presence_df.SUS", add = "point")
presence_bxp #toLatex
#outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
identify_outliers(presence_df.SUS) #no outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
shapiro_test(presence_df.SUS) #to latex, normality may not be assumed -> friedmann #tolatex
ggqqplot(presence_aov_df, "presence_df.SUS", facet.by = "presence_df.d.bedingung") #tolatex
presence_fried_res = presence_aov_df %>%
friedman_test(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id)
presence_fried_res #tolatex
# The Kendall’s W can be used as the measure of the Friedman test effect size.
# It is calculated as follow : W = X2/N(K-1); where W is the Kendall’s W value;
# X2 is the Friedman test statistic value; N is the sample size.
# k is the number of measurements per subject (M. T. Tomczak and Tomczak 2014).
#
# The Kendall’s W coefficient assumes the value from 0 (indicating no relationship)
# to 1 (indicating a perfect relationship).
#
# Kendall’s W uses the Cohen’s interpretation guidelines of 0.1 - < 0.3 (small effect),
# 0.3 - < 0.5 (moderate effect) and >= 0.5 (large effect).
# Confidence intervals are calculated by bootstap.
presence_aov_df %>%
friedman_effsize(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id) #tolatex
pairwise_presence = presence_aov_df %>%
wilcox_test(presence_df.SUS ~ presence_df.d.bedingung, paired=TRUE, p.adjust.method = "holm")
pairwise_presence#tolatex very confused, how can a and b be equal, b and c be equal but a and c not???
#outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
identify_outliers(presence_df.SUS) #no outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
shapiro_test(presence_df.SUS) #to latex, normality may not be assumed -> friedmann #tolatex
ggqqplot(presence_aov_df, "presence_df.SUS", facet.by = "presence_df.d.bedingung") #tolatex
presence_fried_res = presence_aov_df %>%
friedman_test(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id)
presence_fried_res #tolatex
presence_aov_df %>%
friedman_effsize(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id) #tolatex
pairwise_presence = presence_aov_df %>%
wilcox_test(presence_df.SUS ~ presence_df.d.bedingung, paired=TRUE, p.adjust.method = "holm")
pairwise_presence#tolatex very confused, how can a and b be equal, b and c be equal but a and c not???
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "presence_df.d.bedingung", y = "presence_df.SUS", add = "point")
presence_bxp #toLatex
#without 5?
presence_df = subset(presence_df, d.id!=5)
#calculate SUS-score
scores = c()
for(i in 1:nrow(presence_df)) {
row = presence_df[i,]
# do stuff with row
count = 0
#print(row$id)
# print(i)
# print(row$d.A)
# print(row$d.A > 5)
if (row$d.A > 5) {
count = count + 1
}
if (row$d.B > 5) {
count = count + 1
}
if (row$d.C > 5) {
count = count + 1
}
if (row$d.D > 5) {
count = count + 1
}
if (row$d.E > 5) {
count = count + 1
}
if (row$d.F > 5) {
count = count + 1
}
print(count)
#presence_aov_df[i]$SUS = count
scores = c(scores, count)
print("------------------")
}
print(scores)
presence_df$SUS = scores
presence_df
#extract aov df
presence_aov_df = data.frame(presence_df$d.id, presence_df$d.bedingung, presence_df$SUS, stringsAsFactors = TRUE)
presence_aov_df = convert_as_factor(presence_aov_df, presence_df.d.id)
#order by bedingung
presence_aov_df = presence_aov_df %>%
arrange(presence_df.d.bedingung)
tibble(presence_aov_df)
#summary statistics
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
get_summary_stats(presence_df.SUS, type = "mean_sd") #to Latex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "presence_df.d.bedingung", y = "presence_df.SUS", add = "point")
presence_bxp #toLatex
#outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
identify_outliers(presence_df.SUS) #no outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
shapiro_test(presence_df.SUS) #to latex, normality may not be assumed -> friedmann #tolatex
ggqqplot(presence_aov_df, "presence_df.SUS", facet.by = "presence_df.d.bedingung") #tolatex
presence_fried_res = presence_aov_df %>%
friedman_test(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id)
presence_fried_res #tolatex
# The Kendall’s W can be used as the measure of the Friedman test effect size.
# It is calculated as follow : W = X2/N(K-1); where W is the Kendall’s W value;
# X2 is the Friedman test statistic value; N is the sample size.
# k is the number of measurements per subject (M. T. Tomczak and Tomczak 2014).
#
# The Kendall’s W coefficient assumes the value from 0 (indicating no relationship)
# to 1 (indicating a perfect relationship).
#
# Kendall’s W uses the Cohen’s interpretation guidelines of 0.1 - < 0.3 (small effect),
# 0.3 - < 0.5 (moderate effect) and >= 0.5 (large effect).
# Confidence intervals are calculated by bootstap.
presence_aov_df %>%
friedman_effsize(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id) #tolatex
pairwise_presence = presence_aov_df %>%
wilcox_test(presence_df.SUS ~ presence_df.d.bedingung, paired=TRUE, p.adjust.method = "holm")
pairwise_presence#tolatex very confused, how can a and b be equal, b and c be equal but a and c not???
presence_df = subset(presence_df, d.id!=5)
with 10 or not?
presence_df = data.frame(d$id, d$bedingung, d$A, d$B, d$C, d$D, d$E, d$F)
presence_df
#without 5?
presence_df = subset(presence_df, d.id!=5)
#calculate SUS-score
scores = c()
for(i in 1:nrow(presence_df)) {
row = presence_df[i,]
# do stuff with row
count = 0
#print(row$id)
# print(i)
# print(row$d.A)
# print(row$d.A > 5)
if (row$d.A > 5) {
count = count + 1
}
if (row$d.B > 5) {
count = count + 1
}
if (row$d.C > 5) {
count = count + 1
}
if (row$d.D > 5) {
count = count + 1
}
if (row$d.E > 5) {
count = count + 1
}
if (row$d.F > 5) {
count = count + 1
}
print(count)
#presence_aov_df[i]$SUS = count
scores = c(scores, count)
print("------------------")
}
print(scores)
presence_df$SUS = scores
presence_df
#extract aov df
presence_aov_df = data.frame(presence_df$d.id, presence_df$d.bedingung, presence_df$SUS, stringsAsFactors = TRUE)
presence_aov_df = convert_as_factor(presence_aov_df, presence_df.d.id)
#order by bedingung
presence_aov_df = presence_aov_df %>%
arrange(presence_df.d.bedingung)
tibble(presence_aov_df)
#summary statistics
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
get_summary_stats(presence_df.SUS, type = "mean_sd") #to Latex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "presence_df.d.bedingung", y = "presence_df.SUS", add = "point")
presence_bxp #toLatex
#outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
identify_outliers(presence_df.SUS) #no outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
shapiro_test(presence_df.SUS) #to latex, normality may not be assumed -> friedmann #tolatex
ggqqplot(presence_aov_df, "presence_df.SUS", facet.by = "presence_df.d.bedingung") #tolatex
presence_fried_res = presence_aov_df %>%
friedman_test(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id)
presence_fried_res #tolatex
# The Kendall’s W can be used as the measure of the Friedman test effect size.
# It is calculated as follow : W = X2/N(K-1); where W is the Kendall’s W value;
# X2 is the Friedman test statistic value; N is the sample size.
# k is the number of measurements per subject (M. T. Tomczak and Tomczak 2014).
#
# The Kendall’s W coefficient assumes the value from 0 (indicating no relationship)
# to 1 (indicating a perfect relationship).
#
# Kendall’s W uses the Cohen’s interpretation guidelines of 0.1 - < 0.3 (small effect),
# 0.3 - < 0.5 (moderate effect) and >= 0.5 (large effect).
# Confidence intervals are calculated by bootstap.
presence_aov_df %>%
friedman_effsize(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id) #tolatex
pairwise_presence = presence_aov_df %>%
wilcox_test(presence_df.SUS ~ presence_df.d.bedingung, paired=TRUE, p.adjust.method = "holm")
pairwise_presence#tolatex very confused, how can a and b be equal, b and c be equal but a and c not???
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
get_summary_stats(presence_df.SUS, type = "mean_sd") #to Latex
presence_aov_df %>%
friedman_effsize(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id) #tolatex
presence_fried_res = presence_aov_df %>%
friedman_test(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id)
presence_fried_res #tolatex
presence_aov_df %>%
friedman_effsize(presence_df.SUS ~ presence_df.d.bedingung|presence_df.d.id) #tolatex
View(presence_aov_df)
pairwise_presence = presence_aov_df %>%
wilcox_test(presence_df.SUS ~ presence_df.d.bedingung, paired=TRUE, p.adjust.method = "holm")
pairwise_presence#tolatex very confused, how can a and b be equal, b and c be equal but a and c not???
presence_bxp = ggboxplot(presence_aov_df, x = "presence_df.d.bedingung", y = "presence_df.SUS", add = "point")
presence_bxp #toLatex
#diff aov
aov_diff_df_ = data.frame(d$bedingung, d$difference, d$id)
#ohne id 10
aov_diff_df = subset(aov_diff_df_, d.id!=10)
aov_diff_df
#diff aov
aov_diff_df_ = data.frame(d$id, d$bedingung, d$difference)
#ohne id 10
aov_diff_df = subset(aov_diff_df_, d.id!=10)
aov_diff_df
aov_diff_df = convert_as_factor(aov_diff_df, d.id, d.bedingung)
tibble(aov_diff_df)
aov_diff_df = aov_diff_df %>%
arrange(d.bedingung)
tibble(aov_diff_df)
aov_diff_df %>%
group_by(d.bedingung) %>%
get_summary_stats(d.difference, type = "mean_sd") #to Latex
arrange(d.bedingung)
tibble(aov_diff_df)
aov_diff_df_ = data.frame(id = d$id, bedingung = d$bedingung, differenz = d$difference )
View(aov_diff_df_)
#ohne id 10
aov_diff_df = subset(aov_diff_df_, id!=10)
aov_diff_df
aov_diff_df = convert_as_factor(aov_diff_df, id, bedingung)
aov_diff_df = aov_diff_df %>%
arrange(bedingung)
tibble(aov_diff_df)
#summary statistics
aov_diff_df %>%
group_by(bedingung) %>%
get_summary_stats(differenz, type = "mean_sd") #to Latex
#boxplot
bxp = ggboxplot(aov_diff_df, x = "bedingung", y = "difference", add = "point")
bxp #toLatex
#boxplot
bxp = ggboxplot(aov_diff_df, x = "bedingung", y = "differenz", add = "point")
bxp #toLatex
View(aov_diff_df)
#boxplot
bxp = ggboxplot(aov_diff_df, x = "bedingung", y = "differenz", add = "point", xlab=c("test", "test", "test"))
bxp #toLatex
#boxplot
bxp = ggboxplot(aov_diff_df, x = "bedingung", y = "differenz", add = "point", xlab="Fortbewegungsart", ylab="Differenz")
bxp #toLatex
#boxplot
bxp = ggboxplot(aov_diff_df, x = "bedingung", y = "differenz", add = "point", xlab="Fortbewegungsart", ylab="Differenz", label=c("1", "2","---"))
bxp #toLatex
#outliers
aov_diff_df %>%
group_by("d.bedingung") %>%
identify_outliers("d.difference") #no outliers
aov_diff_df %>%
group_by("bedingung") %>%
identify_outliers("differenz") #no outliers
#normality test
aov_diff_df %>%
group_by(d.bedingung) %>%
shapiro_test(d.difference) #to latex, normality may be assumed
aov_diff_df %>%
group_by(bedingung) %>%
shapiro_test(differenz) #to latex, normality may be assumed
aov_diff_df %>%
group_by(bedingung) %>%
shapiro_test(differenz) #to latex, normality may be assumed
#normality plot
ggqqplot(aov_diff_df, "difference", facet.by = "bedingung") #tolatex
#normality plot
ggqqplot(aov_diff_df, "differenz", facet.by = "bedingung") #tolatex
aov_diff_df %>%
group_by(bedingung) %>%
shapiro_test(differenz) #to latex, normality may be assumed
#anova
diff_aov = anova_test(data = aov_diff_df, dv = d.difference, wid = d.id, within = d.bedingung) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
#TOLATEX
#not significant :( this no posthoc test
View(aov_diff_df)
diff_aov = anova_test(data = aov_diff_df, dv = difference, wid = id, within = bedingung) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
#TOLATEX
#not significant :( this no posthoc test
#anova
diff_aov = anova_test(data = aov_diff_df, dv = bedingung, wid = id, within = differenz) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
#TOLATEX
#not significant :( this no posthoc test
#################################presence aov
#anova
diff_aov = anova_test(data = aov_diff_df, dv = bedingung, wid = id, within = differenz) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
#TOLATEX
#not significant :( this no posthoc test
#################################presence aov
diff_aov = anova_test(data = aov_diff_df, dv = differenz, wid = id, within = bedingung) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
diff_aov = anova_test(data = aov_diff_df_, dv = differenz, wid = id, within = bedingung) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
diff_aov = anova_test(data = aov_diff_df, dv = differenz, wid = id, within = bedingung) #with mauchly's test for spherecity
get_anova_table(diff_aov)
#anova
diff_aov = anova_test(data = aov_diff_df, dv = differenz, wid = id, within = bedingunga) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
#TOLATEX
#anova
diff_aov = anova_test(data = aov_diff_df, dv = differenz, wid = id, within = bedingung) #with mauchly's test for spherecity
get_anova_table(diff_aov) # reenhouse-Geisser sphericity correction is automatically applied
#TOLATEX
diff_aov
diff_aov
#with 10 or not?
presence_df = data.frame(d$id, d$bedingung, d$A, d$B, d$C, d$D, d$E, d$F)
presence_df
#without 5?
presence_df = subset(presence_df, d.id!=5)
#calculate SUS-score
scores = c()
for(i in 1:nrow(presence_df)) {
row = presence_df[i,]
# do stuff with row
count = 0
#print(row$id)
# print(i)
# print(row$d.A)
# print(row$d.A > 5)
if (row$d.A > 5) {
count = count + 1
}
if (row$d.B > 5) {
count = count + 1
}
if (row$d.C > 5) {
count = count + 1
}
if (row$d.D > 5) {
count = count + 1
}
if (row$d.E > 5) {
count = count + 1
}
if (row$d.F > 5) {
count = count + 1
}
print(count)
#presence_aov_df[i]$SUS = count
scores = c(scores, count)
print("------------------")
}
print(scores)
presence_df$SUS = scores
presence_df
#extract aov df
presence_aov_df = data.frame(id = presence_df$d.id, bedingung = presence_df$d.bedingung,sus_score = presence_df$SUS, stringsAsFactors = TRUE)
presence_aov_df = convert_as_factor(presence_aov_df, presence_df.d.id)
presence_df
presence_aov_df = data.frame(id = presence_df$d.id, bedingung = presence_df$d.bedingung, sus_score = presence_df$SUS, stringsAsFactors = TRUE)
presence_aov_df = convert_as_factor(presence_aov_df, id)
presence_aov_df = presence_aov_df %>%
arrange(bedingung)
tibble(presence_aov_df)
View(presence_aov_df)
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
get_summary_stats(presence_df.SUS, type = "mean_sd") #to Latex
#summary statistics
presence_aov_df %>%
group_by(bedingung) %>%
get_summary_stats(sus_score, type = "mean_sd") #to Latex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "bedingung", y = "sus_score", add = "point")
presence_bxp #toLatex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "bedingung", y = "sus_score", add = "point", xlab="Fortbewegungsart", ylab="SUS-Score")
presence_bxp #toLatex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "bedingung", y = "sus_score", add = "point", xlab="Fortbewegungsart", ylab="SUS-Präsenz-Score")
presence_bxp #toLatex
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "bedingung", y = "sus_score", add = "point", xlab="Fortbewegungsart", ylab="SUS Präsenz Score")
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "bedingung", y = "sus_score", add = "point", xlab="Fortbewegungsart", ylab="SUS Präsenz Score")
#boxplot
presence_bxp = ggboxplot(presence_aov_df, x = "bedingung", y = "sus_score", add = "point", xlab="Fortbewegungsart", ylab="SUS Präsenz Score")
presence_bxp #toLatex
#outliers
presence_aov_df %>%
group_by(presence_df.d.bedingung) %>%
identify_outliers(presence_df.SUS) #no outliers
#outliers
presence_aov_df %>%
group_by(bedingung) %>%
identify_outliers(sus_score) #no outliers
ggqqplot(presence_aov_df, "sus_score", facet.by = "bedingung") #tolatex
presence_aov_df %>%
group_by(bedingung) %>%
shapiro_test(sus_score) #to latex, normality may not be assumed -> friedmann #tolatex
presence_fried_res = presence_aov_df %>%
friedman_test(sus_score ~ bedingung|id)
presence_fried_res #tolatex
presence_aov_df %>%
friedman_effsize(sus_score ~ bedingung|id) #tolatex
pairwise_presence = presence_aov_df %>%
wilcox_test(presence_df.SUS ~ presence_df.d.bedingung, paired=TRUE, p.adjust.method = "holm")
pairwise_presence#tolatex very confused, how can a and b be equal, b and c be equal but a and c not???
pairwise_presence = presence_aov_df %>%
wilcox_test(sus_score ~ bedingung, paired=TRUE, p.adjust.method = "bonferroni")
pairwise_presence#tolatex very confused, how can a and b be equal, b and c be equal but a and c not???
